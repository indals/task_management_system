version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: task_management_db
    environment:
      POSTGRES_DB: task_management
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U task_user -d task_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and background tasks
  redis:
    image: redis:6-alpine
    container_name: task_management_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Application
  api:
    build: .
    container_name: task_management_api
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://task_user:task_password@db:5432/task_management
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - SECRET_KEY=your-flask-secret-key-change-in-production
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Celery Worker for background tasks
  worker:
    build: .
    container_name: task_management_worker
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://task_user:task_password@db:5432/task_management
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  beat:
    build: .
    container_name: task_management_beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://task_user:task_password@db:5432/task_management
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: task_management_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: task_management_network